name: .NET build

on: push

env:
  PACKAGE_SOURCE: github

defaults:
  run:
    working-directory: encryptonize-client-dotnet

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        path: encryptonize-client-dotnet
        fetch-depth: 0

    - name: Check out repository
      uses: actions/checkout@v2
      with:
        repository: cyber-crypt-com/encryptonize-core
        path: encryptonize-core
        ref: v0.1.25

    - name: Check out repository
      uses: actions/checkout@v2
      with:
        repository: cyber-crypt-com/encryptonize-objects
        path: encryptonize-objects
        ref: v0.1.12

    - name: Setup and cache dependencies
      uses: cyber-crypt-com/build-setup-action@master

    - name: Install XmlDocMarkdown
      run: dotnet tool install xmldocmd -g

    - name: Build
      run: make build

    - name: Test
      run: make tests

    - name: Verify API docs are up-to-date
      run: make apidocs-verify

    - name: Install GitVersion
      if: github.ref_name == 'master'
      uses: gittools/actions/gitversion/setup@v0.9.13
      with:
        versionSpec: '5.x'

    - name: Determine Version
      if: github.ref_name == 'master'
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.13
      with:
        targetPath: encryptonize-client-dotnet
        additionalArguments: '/overrideconfig mode=Mainline'

    - name: Create tag
      if: github.ref_name == 'master'
      run: |
        git tag ${{ steps.gitversion.outputs.semVer }}
        git push origin ${{ steps.gitversion.outputs.semVer }}

    - name: Login into package feed
      if: github.ref_name == 'master'
      run: |
        dotnet nuget add source --username cybot-cc --password ${{ secrets.CYBOT_TOKEN }} --store-password-in-clear-text --name ${{ env.PACKAGE_SOURCE }} "https://nuget.pkg.github.com/cyber-crypt-com/index.json"

    - name: Publish
      if: github.ref_name == 'master'
      run: make nuget-publish
      env:
        API_KEY: ${{ secrets.CYBOT_TOKEN }}
        VERSION: ${{ steps.gitversion.outputs.semVer }}
